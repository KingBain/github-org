name: Manage Teams from JSON

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight

jobs:
  manage-teams:
    runs-on: ubuntu-latest

    steps:
      - name: Convert App token
        id: create_token
        uses: getsentry/action-github-app-token@v3.0.0
        with:
          app_id: ${{ vars.FSDH_TEAM_ADMIN_APP_ID }}
          private_key: ${{ secrets.FSDH_TEAM_ADMIN_APP_KEY }}

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up GitHub CLI
        run: gh auth login --with-token <<< "${{ steps.create_token.outputs.token }}"

      - name: Find and Parse Team JSON Files
        env:
          GH_TOKEN: ${{ steps.create_token.outputs.token }}
        run: |
          team_files=$(find ./.github/workflows/team-configs -name '*.json')
          echo "$team_files" | tr ' ' '\n' | while read -r team_file; do
            team=$(cat "$team_file")
            TEAM_NAME=$(echo "$team" | jq -r '.name')
            TEAM_DESCRIPTION=$(echo "$team" | jq -r '.description // ""')
            TEAM_MEMBERS=$(echo "$team" | jq -c '.members')

            # Create or update the team
            curl -X POST \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/orgs/${ORG_NAME}/teams \
              -d "{\"name\": \"$TEAM_NAME\", \"description\": \"$TEAM_DESCRIPTION\", \"privacy\": \"closed\"}"

            # Get current members of the team
            current_members=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/orgs/${ORG_NAME}/teams/$TEAM_NAME/members | jq -r '.[].login')

            # Add new members or update existing ones
            echo "$TEAM_MEMBERS" | jq -c '.[]' | while read -r member; do
              username=$(echo "$member" | jq -r '.username')
              role=$(echo "$member" | jq -r '.role // "member"')
              curl -X PUT \
                -H "Authorization: token $GITHUB_TOKEN" \
                -H "Accept: application/vnd.github+json" \
                https://api.github.com/orgs/${ORG_NAME}/teams/$TEAM_NAME/memberships/$username \
                -d "{\"role\": \"$role\"}"
            done

            # Remove members who are not in the JSON file
            for member in $current_members; do
              if ! echo "$TEAM_MEMBERS" | jq -e --arg member "$member" '.[] | select(.username == $member)' > /dev/null; then
                curl -X DELETE \
                  -H "Authorization: token $GITHUB_TOKEN" \
                  -H "Accept: application/vnd.github+json" \
                  https://api.github.com/orgs/${ORG_NAME}/teams/$TEAM_NAME/memberships/$member
              fi
            done
          done
